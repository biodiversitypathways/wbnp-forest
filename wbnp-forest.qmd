---
title: "Report on the use of passive acoustic monitoring in Wood Buffalo National Park's Forested Region"
format:
  html:
    grid:
      margin-width: 300px
navbar: right
theme: cosmo
date: "`r format(Sys.time(), '%d %B, %Y')`"
author: 
  - name: "Alex MacPhail"
    affiliation: "Biodiversity Pathways Ltd."
  - name: "Nicolas Comeford"
    affiliation: "Parks Canada, Wood Buffalo National Park"
editor: visual
bibliography: references.bib
nocite: '@*'
toc: true
toc-depth: 3
toc-expand: true
toc-location: left
styles: styles.css
reference-location: margin
citation-location: margin
---

```{r}
#| label: load-packages and authenticate
#| include: false
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(tidyverse)
library(wildrtrax)
library(unmarked)
library(sf)
library(terra)
library(vctrs)
library(ggridges)
library(scales)
library(kableExtra)
library(plotly)
library(DT)
library(lme4)
library(ggpubr)
library(vegan)
library(MuMIn)
library(AICcmodavg)
library(leaflet)
library(modifiedmk)
library(mgcv)
library(ggbreak)

#wt_auth()

load('wbnp.RData')
#save.image('wbnp.RData')
#cirrus_wbnp_recs  <- readRDS('wbnpcirrus.RDS')
```

```{r Data download}
#| warning: false
#| message: false
#| echo: false
#| eval: false
#| include: false
#| code-fold: true

wbnp_projects <- wildrtrax::wt_get_download_summary(sensor = 'ARU') |>
  filter(grepl('Wood Buffalo National Park Forest Songbird Monitoring', project)) |>
  select(project_id) |>
  pull()

wbnp_main <-
  map_dfr(
    .x = wbnp_projects,
    .f = ~ wildrtrax::wt_download_report(
      project_id = .x,
      sensor_id = "ARU",
      weather_cols = T,
      reports = "main"
    )
  )
```

![](wbnp-banner.jpg){style="float:left`;" fig-alt="Photo of a glacier" fig-align="center"}

# Abstract

Passive acoustic monitoring has proven to be an effective tool for tracking vocalizing species. Advances in environmental sensors have made them increasingly easy to deploy and program, allowing them to autonomously generate extensive soundscape datasets. These datasets have become invaluable for monitoring ecological integrity. Wood Buffalo National Park deployed autonomous recording units (ARUs) across `r wbnp_locs |> st_drop_geometry() |> select(location) |> distinct() |> tally()` locations as part of a comprehensive six-year survey. The ARUs detected a total of `r nrow(distinct_spp)` species, including birds, amphibians, and mammals. Analysis of the data showed that species diversity and richness remained relatively stable over time, though relative abundance trends varied among major forest guilds. Granivores, in particular, exhibited the largest significant increase in relative abundance. Ongoing monitoring of these sites is critical for detecting shifts in species communities, particularly as climate-driven changes in landcover continue to rapidly alter habitat conditions.

::: {.callout-note collapse="true" style="background-color: #f4f4f4; padding: 20px;"}
This report is dynamically generated, meaning its results may evolve with the addition of new data or further analyses. For the most recent updates, refer to the publication date and feel free to reach out to the authors.
:::

# Land Acknowledgement

In the spirit of Reconciliation, we respectfully acknowledge that the lands of Wood Buffalo National Park where this study took place are the traditional territories of the Mikisew Cree First Nation, Athabasca Chipewyan First Nation, Fort Chipewyan Métis, Salt River First Nation, K'atl'odeeche First Nation, Deninu Kue First Nation, Fort Smith Métis Council, Hay River Métis Council, and the Fort Resolution Métis Council.

# Introduction

Human activities have been identified as key pressures and contributors to the global decline in forest wildlife (@allan2017recent). The repercussions of habitat fragmentation (@fahrig2003effects) and loss (@hanski2011habitat), climate change (@mantyka2012interactions, @sattar2021review, @abrahms2023climate), and increased access to sensitive areas exert direct and indirect pressures on forest biodiversity, particularly in managed regions in Canada (@lemieux2011state).

In 2018, Wood Buffalo National Park's Forested Region initiated a program incorporating autonomous recording units (ARUs) for passive acoustic monitoring (PAM) of the Park's wildlife. ARUs are compact environmental sensors that are designed to passively record the environment (@aru-overview), capturing vocalizing species like birds and amphibians, which is growing in use across the globe (@lots-of-pam). This technology enables resource managers to conduct prolonged surveys with minimal human interference. The subsequent data collected by these units contribute valuable information to ecological integrity metrics such as species richness, diversity, occupancy, and trends over time. This data aids decision-making and management within the Park. Given the rapid and ease of accumulating data from these units, maintaining a high standard of data integrity is paramount to ensure future data interoperability and sharing. [WildTrax](https://www.wildtrax.ca) is an online platform developed by the [Alberta Biodiversity Monitoring Institute (**ABMI**)](https://abmi.ca) for users of environmental sensors to help addresses these big data challenges by providing solutions to standardize, harmonize, and share data.

The objectives of this report are to:

-   Describe the data management and processing procedures for the acoustic data collected from 2018 to 2024;
-   Utilize traditional human tagging, visual scanning and automated recognition techniques to detect and count species and individuals heard on recordings;
-   Define straightforward methods for evaluating species presence, species richness, and species occupancy over time at various locations; \* Offer recommendations for ongoing monitoring approaches to contribute to the assessment of ecological integrity in forest ecosystems;
-   Facilitate data publication to the public, resource managers, academic institutions, and any other relevant agencies

Specifically this report targets to evaluate forest bird communities within the park by examining species-specific relative abundance trends and community diversity over a six-year period. We focus on twelve focal species representing distinct foraging guilds: granivores (ground to lower canopy gleaners: White-throated Sparrow, Dark-eyed Junco), insectivores performing aerial hawking (Alder Flycatcher, Least Flycatcher), bark gleaners and excavators (Black-and-white Warbler, Yellow-bellied Sapsucker), ground gleaners (Hermit Thrush, Ovenbird), and canopy gleaners (Tennessee Warbler, Yellow Warbler, Swainson’s Thrush, Western Tanager). For each species, we quantify relative abundance and assess five-year population trends. In addition, Shannon diversity is calculated annually at three hierarchical levels: park-wide, per site, and per foraging guild, with corresponding five-year trends. Analyses incorporate methods to control for differences in sampling periods and observation effort across years and sites to ensure robust comparisons.

# Methods

Data were collected during the spring and summer seasons from `r min(wbnp_locs$year)` to `r max(wbnp_locs$year)`. A total of `r wbnp_locs |> st_drop_geometry() |> select(location) |> distinct() |> tally()` locations were surveyed over the six-year period. Locations were surveyed on rotation with `r length(repeats)` locations (`r repeats`) surveyed each year. A detailed list of all survey years can be found in Table 1 (@tbl-loc-summary) and illustrated in Figure 1 (@fig-locs). ARUs were deployed at the beginning of the breeding season in April-May, and rotated locations until their final retrieval in July-August. The ARUs were set to record for \[\]. On average, each ARU recorded for

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| include: true
#| fig-align: center
#| fig-cap: Locations from Wood Buffalo National Park ARU Monitoring Program. 
#| label: fig-aru-monitoring-locations
#| code-fold: true

wbnp_locs <- wbnp_main |>
  mutate(year = lubridate::year(recording_date_time)) |>
  dplyr::select(location, latitude, longitude, year) |>
  drop_na(latitude) |> 
  distinct() |>
  dplyr::mutate(type = case_when(grepl('BAT', location) ~ "Bat", TRUE ~ "Bird")) |>
  sf::st_as_sf(coords = c("longitude", "latitude"), crs = 4326)

# Combine
wbnp_locs_map <- wbnp_locs

# Generate summary table
locs_summary <- wbnp_locs_map |>
  st_drop_geometry() |>
  group_by(location, year) |>
  distinct() |>
  mutate(value = row_number()) |>
  ungroup() |>
  arrange(year) |>
  pivot_wider(names_from = year, values_from = value, values_fill = 0) |>
  rename('Location' = location)

years <- sort(unique(wbnp_locs_map$year))
year_unq <- unique(wbnp_locs_map$year)
pal <- colorFactor(palette = "Set1", domain = years)  # Set1 has distinct colors

m <- leaflet() %>%
  addTiles() %>%
  addPolygons(
    data = wbnp_shp,
    color = "black",
    weight = 1,
    fillOpacity = 0.4,
    popup = ~paste("Park:", adminAreaN)
  )

# Add circle markers per year
for (yr in year_unq) {
  m <- m %>%
    addCircleMarkers(
      data = wbnp_locs_map[wbnp_locs_map$year == yr, ],
      popup = ~paste("Location:", location, "<br>", "Year:", year),
      fillOpacity = 1,
      color = ~pal(year),
      radius = 6,
      group = as.character(yr)  # assign group per year
    )
}

# Add layer control for years
m %>%
  addLayersControl(
    overlayGroups = as.character(year_unq),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addMeasure(primaryLengthUnit = "meters", primaryAreaUnit = "sqmeters") %>%
  addMiniMap(position = "bottomleft") %>%
  addLegend(
    "topright", 
    pal = pal, 
    values = wbnp_locs_map$year,
    title = "Year"
  )


```

```{r}
#| warning: false
#| echo: true
#| eval: true
#| message: false
#| include: true
#| label: tbl-loc-summary
#| collapse: true
#| code-fold: true
#| tbl-cap: Locations surveyed across years. Ones indicated a deployment in that year for that location.

datatable(locs_summary, 
          options = list(
            searching = TRUE,  
            paging = TRUE,    
            pageLength = 10   
          )) |>
  formatStyle(columns = colnames(locs_summary), 
              backgroundColor = styleEqual(c("NA"), "lightgray"))  
```

## Community data processing

The principal goal for data processing was to describe the acoustic community of species heard at locations while choosing a large enough subset of recordings for analyses. To ensure balanced replication, for each location and year surveyed, four randomly selected recordings were processed for 3-minutes between the hours of 4:00 AM - 7:59 AM ideally on four separate dates (see @tbl-loc-repl), and four recordings during the dusk hours (19:00 - 23:00) for nocturnal vocalizing species. Four recordings will ensure that we have the minimum number of samples for a simple occupancy analysis (@mackenzie2002estimating and @imperfect-occu). Tags are made using count-removal (see @farnsworth2002removal, @time-removal) where tags are only made at the time of first detection of each individual heard on the recordings. In case a species was overly abundant a TMTT ('too many to tag') flag was used (see @tbl-tmtt). `r round(nrow(tmtt_tags)/nrow(wbnp_main),2)*100`% of the total tags were TMTT but were subsequently converted to numeric using `wildRtrax::wt_replace_tmtt`. We also verified that all tags that were created were checked by a second observer (n = `r verified_tags |> select(Proportion) |> slice(3) |> pull()`) to ensure accuracy of detections (see @tbl-verified). Amphibian abundance was estimated at the time of first detection using the [North American Amphibian Monitoring Program](https://www.usgs.gov/centers/eesc/science/north-american-amphibian-monitoring-program) with abundance of species being estimated on the scale of "calling intensity index" (CI) of 1 - 3. Mammals such as Red Squirrel, were also noted on the recordings. After the data are processed in WildTrax, the [wildRtrax](https://abbiodiversity.github.io/wildRtrax/) package is use to download the data into a standard format prepared for analysis. The `wt_download_report` function downloads the data directly to a R framework for easy manipulation (see [wildRtrax APIs](https://abbiodiversity.github.io/wildRtrax/articles/apis.html)).

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: false
#| include: true
#| label: tbl-verified
#| tbl-cap: Proportion of tags verified
#| code-fold: true

all_tags <- wbnp_main |> 
  tally() |>
  pull()

verified_tags <- wbnp_main |>
  group_by(tag_is_verified) |>
  tally() |>
  mutate(Proportion = round(n / all_tags,4)*100) |>
  rename("Count" = n) |>
  rename("Tag is verified" = tag_is_verified)

kable(verified_tags)
```

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: false
#| include: true
#| label: tbl-tmtt
#| tbl-cap: TMTT tags
#| code-fold: true

tmtt_tags <- wbnp_main |>
  select(location, recording_date_time, species_code, individual_count) |>
  distinct() |>
  filter(individual_count == "TMTT")

kable(head(tmtt_tags))

```

# Results

## Species richness

A total of `r nrow(distinct_spp)` species were found across the five years. @fig-spp-rich-locs describes the relationship of species richness across each location and survey year with @fig-spp-rich-annual showing the relationship between species richness and survey effort.

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: false
#| code-fold: true
#| include: false

spp_rich_location <- wbnp_main |>
  as_tibble() |>
  mutate(program = case_when(grepl('CBM', location) ~ "CBM Pilot", grepl('NWTI', location) ~ 'Arrival Time', grepl('PAD',location) ~ "Peace-Athabasca Delta", TRUE ~ "Forest Songbirds")) |>
  filter(program == "Forest Songbirds") |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, year, species_code) |>
  distinct() |>
  group_by(location, year) |>
  summarise(species_count = n_distinct(species_code)) |>
  ungroup()

distinct_spp <- wbnp_main |>
  as_tibble() |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(species_code) |>
  distinct() |>
  arrange(species_code)

```

```{r}
#| warning: false
#| message: false
#| echo: false
#| eval: true
#| include: true
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Species richness at forest monitoring locations across years
#| label: fig-spp-rich-locs
#| cap-location: margin
#| code-fold: true

spp_rich_location |>
  ggplot(aes(x=year, y=species_count, fill=year, group=year)) +
  geom_boxplot() +
  geom_point(alpha = 0.7) +
  theme_bw() +
  scale_fill_viridis_c(alpha = 0.7, option = "plasma") +
  xlab('Year') + ylab('Species richness') +
  ggtitle('Species richness at each location surveyed for each year')

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| label: tbl-bird-guilds
#| tbl-cap: Foraging guild classification of songbird species in Wood Buffalo National Park Monitoring Program
#| code-fold: true

guilds <- guild_lookup <- tibble::tribble(
  ~species_common_name, ~guild,
  "White-throated Sparrow", "Granivore: ground to lower canopy gleaner",
  "Dark-eyed Junco", "Granivore: ground to lower canopy gleaner",
  "Alder Flycatcher", "Insectivore: air hawker",
  "Least Flycatcher", "Insectivore: air hawker",
  "Black-and-white Warbler", "Insectivore: bark gleaner",
  "Yellow-bellied Sapsucker", "Insectivore: bark excavator",
  "Hermit Thrush", "Insectivore: ground gleaner",
  "Ovenbird", "Insectivore: ground gleaner",
  "Tennessee Warbler", "Insectivore: canopy gleaner",
  "Yellow Warbler", "Insectivore: canopy gleaner",
  "Swainson's Thrush", "Insectivore: canopy gleaner",
  "Western Tanager", "Insectivore: canopy gleaner"
)

```

```{r}
#| warning: false
#| echo: false
#| eval: false
#| message: false
#| include: true
#| results: hide
#| code-fold: true

wbnp_activity <- wbnp_main |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  dplyr::select(location, recording_date_time, species_common_name, species_code, individual_count) |>
  mutate(julian = lubridate::yday(recording_date_time),
         month= month(recording_date_time),
         year = factor(year(recording_date_time))) |>
  inner_join(guilds |> dplyr::select(species_common_name, guild), by = "species_common_name") |>
  arrange(species_code) |>
  group_by(species_code) |>
  add_tally() |>
  ungroup()

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-cap: Seasonal detection activity of most commonly detected forest species
#| label: fig-spp-activity
#| cap-location: margin
#| code-fold: true

ggplot(wbnp_activity, aes(x = julian, y = species_common_name, fill = guild)) + 
  geom_density_ridges(scale = 3, rel_min_height = 0.005, alpha = 0.4) + 
  scale_fill_viridis_d(option = "plasma") +
  xlim(140,200) +
  theme_bw() +
  xlab("Day of Year") + 
  ylab("Species")


```

## Species diversity

Shannon's diversity was stable based on results. (see @fig-shannon.)

```{r}
#| warning: false
#| echo: true
#| eval: false
#| message: false
#| include: true
#| code-fold: true

shannon_d <- wbnp_main |> 
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = F) |>
  inner_join(wt_get_species() |> dplyr::select(species_code, species_class, species_order), by = "species_code") |>
  dplyr::select(location, recording_date_time, species_code, species_common_name, individual_order, individual_count) |>
  distinct() |>
  group_by(location, recording_date_time, species_code, species_common_name) |>
  summarise(count = max(individual_order)) |>
  ungroup() |>
  pivot_wider(names_from = species_code, values_from = count, values_fill = 0) |>
  pivot_longer(cols = -(location:species_common_name), names_to = "species", values_to = "count") |>
  group_by(location, year = year(recording_date_time), species) |>
  summarise(total_count = sum(count)) |>
  ungroup() |>
  group_by(location, year) |>
  summarise(shannon_index = diversity(total_count, index = "shannon")) |>
  ungroup() 

```

```{r}
#| warning: false
#| echo: true
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-cap: Shannon diversity index over years
#| label: fig-shannon
#| cap-location: bottom
#| code-fold: true

ggplot(shannon_d, aes(x = factor(year), y = shannon_index, fill = factor(year))) +
  geom_boxplot() +
  geom_point(alpha = 0.6, colour = "grey") +
  labs(x = "Year",
       y = "Shannon diversity index per location") +
  theme_bw() +
  theme(legend.position = "none") +
  scale_fill_viridis_d(alpha = 0.7)

```

## Trends

```{r}
#| warning: false
#| echo: true
#| eval: false
#| message: false
#| include: true
#| code-fold: true

yearly_shannon <- shannon_d %>%
  group_by(year) %>%
  summarise(mean_shannon = mean(shannon_index, na.rm = TRUE),
            sd_shannon = sd(shannon_index, na.rm = TRUE),
            n_sites = n(),
            .groups = "drop")
mix_shannon <- lmer(shannon_index ~ year + (1 | location), data = shannon_d)
yearly_shannon <- yearly_shannon %>%
  mutate(mix_fit = predict(mix_shannon, newdata = yearly_shannon, re.form = NA))

```

```{r}
#| warning: false
#| echo: true
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-width: 10
#| fig-height: 8
#| fig-align: center
#| fig-cap: Trend in Mean Shannon Diversity across years
#| label: fig-shannon-trend
#| cap-location: bottom
#| code-fold: true


ggplot(yearly_shannon, aes(x = year, y = mean_shannon)) +
  geom_point(size = 2, color = "#2c7fb8") +                   # points for mean Shannon
  geom_line(aes(y = mix_fit), color = "#d95f02", size = 1.2) + # predicted trend from mixed model
  geom_ribbon(aes(ymin = mean_shannon - sd_shannon, 
                  ymax = mean_shannon + sd_shannon),
              alpha = 0.2, fill = "#2c7fb8") +                 # variability around mean
  labs(title = "Shannon Diversity Trend Over Years",
       x = "Year",
       y = "Mean Shannon Index",
       caption = "Points = yearly mean; Ribbon = ±1 SD; Line = mixed model prediction") +
  theme_minimal(base_size = 14)

```

```{r}
#| warning: false
#| echo: true
#| eval: false
#| message: false
#| include: true
#| code-fold: true

plot_focal <- 
  wbnp_main |>
  inner_join(guilds, by = "species_common_name") |>
  mutate(year = year(recording_date_time)) |>
  dplyr::select(location, year, species_code, individual_order, individual_count) |>
  group_by(location, year, species_code) |>
  summarise(individual_order = mean(individual_order)) |>
  ungroup() |>
  mutate(year = round(year,0)) |>
  group_by(year, location, species_code) |>
  summarise(
    total_abundance = sum(individual_order),  
    sample_size = n_distinct(location)
  ) |>
  ungroup() |>
  mutate(normalized_count = total_abundance / sample_size)

plot_focal_guild <- 
  wbnp_main |>
  inner_join(guilds, by = "species_common_name") |>
  mutate(year = year(recording_date_time)) |>
  dplyr::select(location, year, guild, species_code, individual_order, individual_count) |>
  group_by(location, year, guild, species_code) |>
  summarise(individual_order = mean(individual_order)) |>
  ungroup() |>
  mutate(year = round(year,0)) |>
  group_by(year, location,  guild) |>
  summarise(
    total_abundance = sum(individual_order),  
    sample_size = n_distinct(location)
  ) |>
  ungroup() |>
  mutate(normalized_count = total_abundance / sample_size)

```

```{r}
#| warning: false
#| echo: true
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-width: 10
#| fig-height: 8
#| fig-align: center
#| fig-cap: Normalized abundance trend over time for target species
#| label: fig-abundance-normalized
#| cap-location: bottom
#| code-fold: true

# Plot
ggplot(plot_focal, aes(x = year, y = normalized_count, colour = species_code)) +
  geom_smooth(method = "lm") +
  geom_point(size = 2) +
  labs(
    x = "Year",
    y = "Normalized Count",
    title = "Normalized Count of Species Abundance",
    colour = "Species Code"
  ) +
  scale_colour_viridis_d(option = "plasma") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  facet_wrap(~species_code)


ggplot(plot_focal_guild, aes(x = year, y = normalized_count, colour = guild)) +
  geom_smooth(method = "lm") +
  geom_point(size = 2) +
  labs(
    x = "Year",
    y = "Normalized Count",
    title = "Normalized Count of Guilds",
    colour = "Guilds"
  ) +
  scale_colour_viridis_d(option = "plasma") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  facet_wrap(~guild, labeller = label_wrap_gen(width = 30))

```

# Discussion
